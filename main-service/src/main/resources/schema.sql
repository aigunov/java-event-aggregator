CREATE SEQUENCE IF NOT EXISTS event_seq START WITH 0 INCREMENT BY 1 MINVALUE 0;

CREATE TABLE IF NOT EXISTS users
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    name  VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT PRIMARY KEY DEFAULT nextval('event_seq'),
    annotation         VARCHAR(2000)    NOT NULL,
    description        VARCHAR(7000)    NOT NULL,
    title              VARCHAR(255)     NOT NULL,
    created_on         TIMESTAMP        NOT NULL,
    event_date         TIMESTAMP        NOT NULL,
    published_on       TIMESTAMP        NOT NULL,
    paid               BOOLEAN          NOT NULL,
    participant_limit  INTEGER          NOT NULL,
    request_moderation BOOLEAN          NOT NULL,
    state              VARCHAR(255)     NOT NULL,
    initiator          INTEGER          NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    category           INTEGER          NOT NULL REFERENCES categories (id),
    lat                DOUBLE PRECISION NOT NULL,
    lon                DOUBLE PRECISION NOT NULL
);

CREATE TABLE IF NOT EXISTS requests
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP    NOT NULL,
    event_id     INTEGER      NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    status       VARCHAR(255) NOT NULL,
    requester_id INTEGER      NOT NULL REFERENCES users (id) ON DELETE CASCADE
);

CREATE SEQUENCE IF NOT EXISTS compilation_seq START WITH 0 INCREMENT BY 1 MINVALUE 0;

CREATE TABLE IF NOT EXISTS compilations
(
    id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title  VARCHAR(255) NOT NULL,
    pinned BOOLEAN      NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id INTEGER NOT NULL REFERENCES compilations (id) ON DELETE CASCADE,
    event_id       INTEGER NOT NULL REFERENCES events (id) ON DELETE CASCADE
);